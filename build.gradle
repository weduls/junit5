buildscript {
	ext {
		springBootVersion = '2.2.2.RELEASE'
	}

	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE")
		classpath "net.ltgt.gradle:gradle-apt-plugin:0.21"
	}
}

allprojects {
	group = 'com.wedul'
	version = '1.0.0'
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'org.springframework.boot'
	apply plugin: "io.spring.dependency-management"
	apply plugin: 'net.ltgt.apt'
	apply plugin: 'application'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
		maven { url "https://repo.spring.io/milestone" }
	}

	tasks.withType(JavaCompile) {
		options.encoding = 'UTF-8'
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-web'
		compile group: 'commons-codec', name: 'commons-codec', version: '1.10'

		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		compile('org.springframework.boot:spring-boot-starter-data-jpa')
		compile ('mysql:mysql-connector-java')

		// testìš© h2
		compile('com.h2database:h2')
		testCompile('com.h2database:h2')

		testCompile "org.testcontainers:testcontainers:1.12.4"
		testCompile "org.testcontainers:junit-jupiter:1.12.4"
		testCompile "org.testcontainers:mysql:1.12.4"
		implementation 'org.springframework.boot:spring-boot-starter'
		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
	}

	test {
		useJUnitPlatform()
	}
}